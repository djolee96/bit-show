{"version":3,"sources":["app/components/Header.jsx","app/components/ShowCard.jsx","app/components/SearchBar.jsx","app/components/Loader.jsx","services/HttpService.js","models/show.js","app/components/MostPopular.jsx","services/showsService.js","models/actor.js","app/components/Genre.jsx","app/components/CastCard.jsx","shared/filterString.js","app/components/SingleShow.jsx","app/components/Main.jsx","shared/curentYear.js","app/components/Footer.jsx","app/App.js","index.js"],"names":["Header","className","to","React","Component","ShowCard","this","props","showInfo","id","picture","title","rating","medium","src","alt","SearchBar","onInputHandler","e","query","target","value","onSearch","setState","state","type","placeholder","required","onChange","htmlFor","Loader","http","url","fetch","then","response","json","Show","name","image","genres","summary","average","MostPopular","searchShows","get","fetchSearchShow","shows","map","show","isLoaded","length","displayShows","key","Actor","castData","person","Genre","genre","CastCard","actor","filterString","string","ArrayOfText","stringLength","newString","i","iterationString","index","indexOf","substr","SingleShow","actors","fetchSingleShow","match","params","_embedded","cast","Main","exact","path","component","year","Date","getFullYear","Footer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9cf9ed1f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\"\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <nav>\r\n                <div className=\"nav-wrapper blue\">\r\n                    <Link to=\"/\"> <span className=\"brand-logo center\">BIT SHOW</span></Link>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport { Link } from \"react-router-dom\"\r\nclass ShowCard extends React.Component {\r\n\r\n    render() {\r\n        let { id, picture, title, rating } = this.props.showInfo\r\n        if (!picture) {\r\n            picture = { medium: \"http://static.tvmaze.com/uploads/images/medium_portrait/0/305.jpg\" }\r\n        }\r\n        return (\r\n            <div className=\"col s12 m6 xl3\" >\r\n                <Link to={`/${id}`}>\r\n                    <div className=\"card\" >\r\n                        <div className=\"card-image\" >\r\n                            <img src={picture.medium} alt=\"\" />\r\n                            <span className=\"btn-floating halfway-fab waves-effect waves-light blue center\">  {rating}</span>\r\n                        </div>\r\n                        <div className=\"card-content\" >\r\n                            <span className=\"card-title\" >{title}</span>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShowCard","import React from \"react\";\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            query: \"\"\r\n        }\r\n\r\n    }\r\n    onInputHandler = (e) => {\r\n        const query = e.target.value\r\n        const { onSearch } = this.props\r\n        this.setState({ query })\r\n        onSearch(query)\r\n    }\r\n\r\n    render() {\r\n        return (<nav>\r\n            <div className=\"nav-wrapper white\">\r\n                <form>\r\n                    <div className=\"input-field\">\r\n                        <input id=\"search\" type=\"search\" placeholder=\"Search Show\" required onChange={this.onInputHandler} value={this.state.query} />\r\n                        <label className=\"label-icon\" htmlFor=\"search\"><i className=\"material-icons\">search</i></label>\r\n                        <i className=\"material-icons\">close</i>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </nav>)\r\n\r\n    }\r\n}\r\n\r\nexport default SearchBar","import React from 'react';\r\n\r\nclass Loader extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"sk-cube-grid\">\r\n                <div className=\"sk-cube sk-cube1\"></div>\r\n                <div className=\"sk-cube sk-cube2\"></div>\r\n                <div className=\"sk-cube sk-cube3\"></div>\r\n                <div className=\"sk-cube sk-cube4\"></div>\r\n                <div className=\"sk-cube sk-cube5\"></div>\r\n                <div className=\"sk-cube sk-cube6\"></div>\r\n                <div className=\"sk-cube sk-cube7\"></div>\r\n                <div className=\"sk-cube sk-cube8\"></div>\r\n                <div className=\"sk-cube sk-cube9\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Loader","class HttpService {\r\n    get(url) {\r\n        return fetch(url)\r\n            .then(response => response.json())\r\n    }\r\n}\r\nexport const http = new HttpService()","class Show {\r\n    constructor({ id, name, image, rating, genres, summary }) {\r\n        this.id = id;\r\n        this.title = name;\r\n        this.picture = image\r\n        this.rating = rating.average\r\n        this.genres = genres\r\n        this.summary = summary\r\n\r\n    }\r\n}\r\nexport default Show","import React from 'react';\r\nimport ShowCard from \"./ShowCard\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Loader from \"./Loader\";\r\nimport { fetchShows, fetchSearchShow } from \"../../services/showsService\";\r\nimport Show from \"../../models/show\";\r\n\r\nclass MostPopular extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            shows: [],\r\n            searchShows: [],\r\n            isLoaded: false\r\n        }\r\n    }\r\n    searchShows = (query) => {\r\n        fetchSearchShow(query)\r\n            .then(shows => {\r\n                this.setState({ searchShows: shows.map(show => new Show(show.show)), isLoaded: true })\r\n            })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        fetchShows()\r\n            .then(shows => {\r\n                shows.length = 50\r\n                this.setState({ shows: shows.map(show => new Show(show)), isLoaded: true })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { shows, searchShows } = this.state\r\n        let displayShows = shows\r\n        if (!!searchShows.length) {\r\n            displayShows = searchShows\r\n        }\r\n        return (\r\n            <div className=\"row\">\r\n                <SearchBar onSearch={this.searchShows} />\r\n                {this.state.isLoaded ?\r\n                    displayShows.map(show => <ShowCard showInfo={show} key={show.id} />) :\r\n                    <Loader />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MostPopular","import { http } from \"./HttpService\"\r\n\r\nfunction fetchShows() {\r\n    const url = \"https://api.tvmaze.com/shows\"\r\n    return (http.get(url))\r\n}\r\nfunction fetchSingleShow(id) {\r\n    let url = `https://api.tvmaze.com/shows/${id}?embed=cast`\r\n    return (http.get(url))\r\n}\r\n\r\nfunction fetchSearchShow(query) {\r\n    const url = `https://api.tvmaze.com/search/shows?q=${query}`\r\n    return (http.get(url))\r\n}\r\n\r\nexport { fetchShows, fetchSingleShow, fetchSearchShow }","class Actor {\r\n    constructor(castData) {\r\n        this.id = castData.person.id;\r\n        this.name = castData.person.name;\r\n        this.picture = castData.person.image.medium\r\n    }\r\n}\r\nexport default Actor","import React from \"react\"\r\n\r\nclass Genre extends React.Component {\r\n    render() {\r\n\r\n        return (<span className=\"genre grey lighten-1\">{this.props.genre}</span>)\r\n\r\n    }\r\n}\r\n\r\nexport default Genre","import React from \"react\"\r\n\r\nclass CastCard extends React.Component {\r\n    render() {\r\n        const { name, picture } = this.props.actor\r\n        return (\r\n            <div className=\"col s4 m4 xl2\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-image\">\r\n                        <img src={picture} alt=\"\" />\r\n                        <span className=\"card-title\">{name}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default CastCard","function filterString(string, ArrayOfText/*array of strings to remove from string*/) {\r\n    const stringLength = string.length\r\n    let newString = \"\"\r\n\r\n    for (let i = 0; i < stringLength; i++) {\r\n        let iterationString = string\r\n        for (let index = 0; index < ArrayOfText.length; index++) {\r\n            if (string.indexOf(ArrayOfText[index]) === 0) {\r\n                iterationString = iterationString.substr(ArrayOfText[index].length, stringLength)\r\n            }\r\n            else if (string.indexOf(ArrayOfText[index]) !== -1) {\r\n                iterationString = iterationString.substr(0, iterationString.indexOf(ArrayOfText[index])) + iterationString.substr((iterationString.indexOf(ArrayOfText[index]) + ArrayOfText[index].length), stringLength)\r\n            }\r\n\r\n        }\r\n        newString = iterationString\r\n    }\r\n    return newString\r\n\r\n}\r\nexport default filterString","import React from \"react\"\r\nimport { fetchSingleShow } from \"../../services/showsService\"\r\nimport Show from \"../../models/show\"\r\nimport Actor from \"../../models/actor\"\r\nimport Genre from \"./Genre\"\r\nimport CastCard from './CastCard'\r\nimport filterString from \"../../shared/filterString\"\r\nimport Loader from \"./Loader\";\r\n\r\nclass SingleShow extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            show: {},\r\n            actors: [],\r\n            isLoaded: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let id = this.props.match.params.id\r\n        fetchSingleShow(id)\r\n            .then(show => {\r\n                const actors = show._embedded.cast\r\n                actors.length = 6\r\n                this.setState({ isLoaded: true, show: new Show(show), actors: actors.map(actor => new Actor(actor)) }\r\n                )\r\n            }\r\n            )\r\n    }\r\n    render() {\r\n        let { picture, title, genres = [], summary = \"\" } = this.state.show\r\n        const actors = this.state.actors\r\n        const isLoaded = this.state.isLoaded\r\n        if (!isLoaded) {\r\n            return <Loader />\r\n        }\r\n        if (!picture) {\r\n            picture = { medium: \"http://static.tvmaze.com/uploads/images/medium_portrait/0/305.jpg\" }\r\n        }\r\n        return (<div className=\"row\">\r\n            <div className=\"col s12 m6 xl5\">\r\n                <div className=\"card single\">\r\n                    <div className=\"card-image\">\r\n                        <img src={picture.medium} alt=\"\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col s12 m6 xl6 offset-xl1\">\r\n                <h3 className=\"card-title\">{title}</h3>\r\n                {genres.map((genre) => <Genre genre={genre} />)}\r\n                <div className=\"about\">{filterString(summary, ['<p>', '</p>', '<b>', '</b>'])}</div>   {/* problem with <p></p> <b></b>from api */}\r\n            </div>\r\n            <div className=\"col s12 m12 xl12\">\r\n                <div className=\"row\">\r\n                    {actors.map(actor => <CastCard actor={actor} key={actor.id} />)}\r\n                </div>\r\n            </div>\r\n\r\n        </div>)\r\n\r\n    }\r\n}\r\n\r\nexport default SingleShow","import React from 'react';\r\nimport MostPopular from \"./MostPopular\"\r\nimport { Switch, Route } from \"react-router-dom\"\r\nimport SingleShow from './SingleShow';\r\n\r\nclass Main extends React.Component {\r\n\r\n    render() {\r\n        return (<main>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={MostPopular} />\r\n                <Route path=\"/:id\" component={SingleShow} />\r\n            </Switch>\r\n        </main>)\r\n    }\r\n}\r\n\r\nexport default Main","function year() {\r\n    const date = new Date()\r\n    return (\r\n        date.getFullYear()\r\n    )\r\n}\r\n\r\nexport default year","import React from 'react';\r\nimport year from \"../../shared/curentYear\"\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <footer className=\"page-footer blue\">\r\n                <div className=\"footer-copyright\">\r\n                    <div className=\"container\">\r\n                        © {year()} Copyright Text\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\nimport Header from \"./components/Header\";\r\nimport Main from \"./components/Main\";\r\nimport Footer from \"./components/Footer\";\r\nimport \"../scss/main.css\"\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      < div className=\"App container\" >\r\n        <Header />\r\n        <Main />\r\n        <Footer />\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport '../node_modules/materialize-css/dist/css/materialize.min.css';\r\nimport '../node_modules/materialize-css/dist/js/materialize.min.js';\r\nimport App from './app/App';\r\nimport { HashRouter } from \"react-router-dom\"\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <HashRouter >\r\n        <App />\r\n    </HashRouter >,\r\n    document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}